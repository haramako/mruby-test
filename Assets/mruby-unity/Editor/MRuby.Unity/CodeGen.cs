using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEditor;
using System.Reflection;
using MRuby.CodeGen;
using System.IO;

[InitializeOnLoad]
public class CodeGen
{
    [MenuItem("MRuby/Generate Code")]
    static public void GenerateCode()
    {
        var cg = new CodeGen();
        cg.Generate();

    }

    public CodeGen()
    {
    }

    public void Generate()
    {
        var reg = new Registry();

        var gen = new ClassRegister();
        var assembly = Assembly.Load("Assembly-CSharp");

        var mrubyTypes = ClassRegister.GetMRubyClasses(assembly);
        mrubyTypes.Add(typeof(System.Object));

        foreach (var t in mrubyTypes)
        {
            gen.RegisterClass(reg, t);
        }

        new RegistryPrinter(2).PrintRegistry(reg);

        var path = "Assets/mruby-unity/AutoGenerated/";

        foreach (var cls in reg.AllDescs())
        {
            if (!cls.IsNamespace && !cls.Type.IsGenericType)
            {
                CodeGenerator cg = new CodeGenerator(reg, cls, path);
                cg.givenNamespace = "";
                cg.Generate();
            }
        }

        new BindingGenerator(reg, Path.Combine(path, "_Binder.cs"), "_Binder").Generate();

        AssetDatabase.Refresh();
    }
}
